# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: BloodPressure_SABI                                   # "BMI_CI" workflow, name is optional

env:
  AZURE_WEBAPP_NAME: BloodPressureApp                  # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'              # set this to the path to your web app project

on:
 workflow_dispatch:        
# push:                                             #  workflow_dispatch for manually triggered
#   branches: [ master ]
 

jobs:
  build:                                            # "build" job
    runs-on: windows-latest                         # runner
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build for Release
      run: dotnet build --configuration Release

    - name: Create Test Results Directory
      run: mkdir -p ./TestResults
      
    - name: Run Unit Tests and Save Plain Text Results
      run: |
          dotnet test --filter "Category=Unit" --no-build --configuration Release > ./TestResults/unit-tests.txt

    - name: Run BDD Tests and Save Plain Text Results
      run: |
          dotnet test --filter "Category=BDD" --no-build --configuration Release > ./TestResults/bdd-tests.txt

    - name: Install SonarCloud Scanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Add .NET tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
    
    - name: Run SonarCloud Code Analysis (Begin)
      env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_SECRET }}
      shell: bash
      run: |
          echo "Starting SonarCloud analysis..."
          if ! dotnet sonarscanner begin /k:sabzero79 /o:Sabi_Varga /d:sonar.login='${{ secrets.SONARCLOUD_SECRET }}'; then
            echo "SonarCloud analysis failed to start."
            exit 1
          fi
          echo "SonarCloud analysis started successfully."

    - name: Build Project (Required for SonarCloud)
      run: dotnet build || exit 1

    - name: Run SonarCloud Code Analysis (End)
      env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_SECRET }}
      shell: bash
      run: |
          if ! dotnet sonarscanner end /d:sonar.login="${{ secrets.SONARCLOUD_SECRET }}"; then
            echo "SonarCloud analysis end step failed."
            exit 1
          fi
          
    - name: Save SonarCloud Report to Text File
      run: |
          curl -u $SONAR_TOKEN: "https://sonarcloud.io/api/project_analyses/search?project=your-sonarcloud-project-key" > ./TestResults/sonar-report.txt

    - name: Upload Test Results as Artifacts
      uses: actions/upload-artifact@v3
      with:
          name: TestResults
          path: ./TestResults
          retention-days: 7

    #- name: Run unit tests
    # run: dotnet test bmiUnitTestProject/bmiUnitTestProject.csproj --collect "Code coverage" -l:trx
   
    #- name: Publish Unit Test Results
     # uses: dorny/test-reporter@v1
     # with:
      #  artifact: ''
      #  name: MS Tests                  
      #  path: '**.trx'
      #  reporter: 'dotnet-trx'                     

    - name: Publish
      run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 

# Deploy to Azure Web apps
    - name: Run Azure webapp deploy action using publish profile credentials
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}                        # your app name
        publish-profile: ${{ secrets.AZURE_SECRET  }} # Define secret variable in repository settings as per action documentation
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
