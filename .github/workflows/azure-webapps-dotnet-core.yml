name: BloodPressure_SABI

env:
  AZURE_WEBAPP_NAME: BloodPressureApp
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'

on:
  workflow_dispatch:        

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Install dependencies
      run: dotnet restore

    - name: Initialize CodeQL
      uses: github/codeql-action/init@main
      with:
        languages: 'csharp'

    # Use CodeQL to monitor the build
    - name: Build the project for CodeQL analysis
      run: dotnet build --configuration Release
      env:
        CODEQL_EXTRACTOR_CSHARP_TRACING: 'true'  # Enables verbose output for troubleshooting

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@main
      with:
        output: './TestResults/codeql-report'

     #Additional steps after CodeQL analysis to convert SARIF to plain text
    - name: Convert SARIF to Plain Text Report
      shell: powershell
      run: |
        $sarifFilePath = "./TestResults/codeql-results.sarif" # Path to SARIF file
        $outputFilePath = "./TestResults/codeql-results.txt"
        
        # Check if SARIF file exists
        if (Test-Path -Path $sarifFilePath) {
          # Parse SARIF JSON and extract relevant information
          $sarifContent = Get-Content -Path $sarifFilePath | ConvertFrom-Json
          $report = @()
          
          foreach ($run in $sarifContent.runs) {
            foreach ($result in $run.results) {
              $message = $result.message.text
              $level = $result.level
              $fileLocation = $result.locations[0].physicalLocation.artifactLocation.uri
              $line = $result.locations[0].physicalLocation.region.startLine
              $report += "[$level] $fileLocation (Line $line): $message"
            }
          }
          
          # Write report to plain text file
          $report | Out-File -FilePath $outputFilePath -Encoding utf8
        } else {
          Write-Host "SARIF file not found!"
        }
      
    - name: Upload Test Results as Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TestResults
        path: ./TestResults
        retention-days: 7

    - name: Publish
      run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

    - name: Run Azure webapp deploy action using publish profile credentials
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_SECRET }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
